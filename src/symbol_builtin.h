/* Auto generated by make_symbol_table.rb */
#ifndef MRBC_SRC_SYMBOL_BUILTIN_H_
#define MRBC_SRC_SYMBOL_BUILTIN_H_

#if defined(MRBC_DEFINE_SYMBOL_TABLE)
static const char *builtin_symbols[] = {
  "!",
  "!=",
  "%",
  "&",
  "*",
  "**",
  "+",
  "+@",
  "-@",
  "<<",
  "<=>",
  "===",
  ">>",
  "ArgumentError",
  "Array",
  "E",
  "Exception",
  "FalseClass",
  "Float",
  "Hash",
  "IndexError",
  "Integer",
  "MRUBYC_VERSION",
  "MRUBY_VERSION",
  "Math",
  "NilClass",
  "Object",
  "PI",
  "Proc",
  "RUBY_VERSION",
  "Range",
  "RuntimeError",
  "StandardError",
  "String",
  "Symbol",
  "TrueClass",
  "TypeError",
  "ZeroDivisionError",
  "[]",
  "[]=",
  "^",
  "abs",
  "acos",
  "acosh",
  "all_symbols",
  "asin",
  "asinh",
  "at",
  "atan",
  "atan2",
  "atanh",
  "attr_accessor",
  "attr_reader",
  "b",
  "block_given?",
  "call",
  "cbrt",
  "chomp",
  "chomp!",
  "chr",
  "class",
  "clear",
  "collect",
  "collect!",
  "cos",
  "cosh",
  "count",
  "delete",
  "delete_at",
  "delete_if",
  "dup",
  "each",
  "each_byte",
  "each_char",
  "each_index",
  "each_with_index",
  "empty?",
  "end_with?",
  "erf",
  "erfc",
  "exclude_end?",
  "exp",
  "first",
  "getbyte",
  "has_key?",
  "has_value?",
  "hypot",
  "id2name",
  "include?",
  "index",
  "initialize",
  "inspect",
  "instance_methods",
  "instance_variables",
  "intern",
  "is_a?",
  "join",
  "key",
  "keys",
  "kind_of?",
  "last",
  "ldexp",
  "length",
  "log",
  "log10",
  "log2",
  "loop",
  "lstrip",
  "lstrip!",
  "map",
  "map!",
  "max",
  "memory_statistics",
  "merge",
  "merge!",
  "message",
  "min",
  "minmax",
  "new",
  "nil?",
  "object_id",
  "ord",
  "p",
  "pop",
  "print",
  "printf",
  "push",
  "puts",
  "raise",
  "reject",
  "reject!",
  "rstrip",
  "rstrip!",
  "shift",
  "sin",
  "sinh",
  "size",
  "slice!",
  "sort",
  "sort!",
  "split",
  "sprintf",
  "sqrt",
  "start_with?",
  "strip",
  "strip!",
  "tan",
  "tanh",
  "times",
  "to_a",
  "to_f",
  "to_h",
  "to_i",
  "to_s",
  "to_sym",
  "tr",
  "tr!",
  "unshift",
  "values",
  "|",
  "~",
};
#endif

enum {
  MRBC_SYMID_NOT = 0,
  MRBC_SYMID_NOT_EQ = 1,
  MRBC_SYMID_MOD = 2,
  MRBC_SYMID_AND = 3,
  MRBC_SYMID_MUL = 4,
  MRBC_SYMID_MUL_MUL = 5,
  MRBC_SYMID_PLUS = 6,
  MRBC_SYMID_PLUS_AT = 7,
  MRBC_SYMID_MINUS_AT = 8,
  MRBC_SYMID_LT_LT = 9,
  MRBC_SYMID_LT_EQ_GT = 10,
  MRBC_SYMID_EQ_EQ_EQ = 11,
  MRBC_SYMID_GT_GT = 12,
  MRBC_SYMID_ArgumentError = 13,
  MRBC_SYMID_Array = 14,
  MRBC_SYMID_E = 15,
  MRBC_SYMID_Exception = 16,
  MRBC_SYMID_FalseClass = 17,
  MRBC_SYMID_Float = 18,
  MRBC_SYMID_Hash = 19,
  MRBC_SYMID_IndexError = 20,
  MRBC_SYMID_Integer = 21,
  MRBC_SYMID_MRUBYC_VERSION = 22,
  MRBC_SYMID_MRUBY_VERSION = 23,
  MRBC_SYMID_Math = 24,
  MRBC_SYMID_NilClass = 25,
  MRBC_SYMID_Object = 26,
  MRBC_SYMID_PI = 27,
  MRBC_SYMID_Proc = 28,
  MRBC_SYMID_RUBY_VERSION = 29,
  MRBC_SYMID_Range = 30,
  MRBC_SYMID_RuntimeError = 31,
  MRBC_SYMID_StandardError = 32,
  MRBC_SYMID_String = 33,
  MRBC_SYMID_Symbol = 34,
  MRBC_SYMID_TrueClass = 35,
  MRBC_SYMID_TypeError = 36,
  MRBC_SYMID_ZeroDivisionError = 37,
  MRBC_SYMID_BL_BR = 38,
  MRBC_SYMID_BL_BR_EQ = 39,
  MRBC_SYMID_XOR = 40,
  MRBC_SYMID_abs = 41,
  MRBC_SYMID_acos = 42,
  MRBC_SYMID_acosh = 43,
  MRBC_SYMID_all_symbols = 44,
  MRBC_SYMID_asin = 45,
  MRBC_SYMID_asinh = 46,
  MRBC_SYMID_at = 47,
  MRBC_SYMID_atan = 48,
  MRBC_SYMID_atan2 = 49,
  MRBC_SYMID_atanh = 50,
  MRBC_SYMID_attr_accessor = 51,
  MRBC_SYMID_attr_reader = 52,
  MRBC_SYMID_b = 53,
  MRBC_SYMID_block_given_Q = 54,
  MRBC_SYMID_call = 55,
  MRBC_SYMID_cbrt = 56,
  MRBC_SYMID_chomp = 57,
  MRBC_SYMID_chomp_E = 58,
  MRBC_SYMID_chr = 59,
  MRBC_SYMID_class = 60,
  MRBC_SYMID_clear = 61,
  MRBC_SYMID_collect = 62,
  MRBC_SYMID_collect_E = 63,
  MRBC_SYMID_cos = 64,
  MRBC_SYMID_cosh = 65,
  MRBC_SYMID_count = 66,
  MRBC_SYMID_delete = 67,
  MRBC_SYMID_delete_at = 68,
  MRBC_SYMID_delete_if = 69,
  MRBC_SYMID_dup = 70,
  MRBC_SYMID_each = 71,
  MRBC_SYMID_each_byte = 72,
  MRBC_SYMID_each_char = 73,
  MRBC_SYMID_each_index = 74,
  MRBC_SYMID_each_with_index = 75,
  MRBC_SYMID_empty_Q = 76,
  MRBC_SYMID_end_with_Q = 77,
  MRBC_SYMID_erf = 78,
  MRBC_SYMID_erfc = 79,
  MRBC_SYMID_exclude_end_Q = 80,
  MRBC_SYMID_exp = 81,
  MRBC_SYMID_first = 82,
  MRBC_SYMID_getbyte = 83,
  MRBC_SYMID_has_key_Q = 84,
  MRBC_SYMID_has_value_Q = 85,
  MRBC_SYMID_hypot = 86,
  MRBC_SYMID_id2name = 87,
  MRBC_SYMID_include_Q = 88,
  MRBC_SYMID_index = 89,
  MRBC_SYMID_initialize = 90,
  MRBC_SYMID_inspect = 91,
  MRBC_SYMID_instance_methods = 92,
  MRBC_SYMID_instance_variables = 93,
  MRBC_SYMID_intern = 94,
  MRBC_SYMID_is_a_Q = 95,
  MRBC_SYMID_join = 96,
  MRBC_SYMID_key = 97,
  MRBC_SYMID_keys = 98,
  MRBC_SYMID_kind_of_Q = 99,
  MRBC_SYMID_last = 100,
  MRBC_SYMID_ldexp = 101,
  MRBC_SYMID_length = 102,
  MRBC_SYMID_log = 103,
  MRBC_SYMID_log10 = 104,
  MRBC_SYMID_log2 = 105,
  MRBC_SYMID_loop = 106,
  MRBC_SYMID_lstrip = 107,
  MRBC_SYMID_lstrip_E = 108,
  MRBC_SYMID_map = 109,
  MRBC_SYMID_map_E = 110,
  MRBC_SYMID_max = 111,
  MRBC_SYMID_memory_statistics = 112,
  MRBC_SYMID_merge = 113,
  MRBC_SYMID_merge_E = 114,
  MRBC_SYMID_message = 115,
  MRBC_SYMID_min = 116,
  MRBC_SYMID_minmax = 117,
  MRBC_SYMID_new = 118,
  MRBC_SYMID_nil_Q = 119,
  MRBC_SYMID_object_id = 120,
  MRBC_SYMID_ord = 121,
  MRBC_SYMID_p = 122,
  MRBC_SYMID_pop = 123,
  MRBC_SYMID_print = 124,
  MRBC_SYMID_printf = 125,
  MRBC_SYMID_push = 126,
  MRBC_SYMID_puts = 127,
  MRBC_SYMID_raise = 128,
  MRBC_SYMID_reject = 129,
  MRBC_SYMID_reject_E = 130,
  MRBC_SYMID_rstrip = 131,
  MRBC_SYMID_rstrip_E = 132,
  MRBC_SYMID_shift = 133,
  MRBC_SYMID_sin = 134,
  MRBC_SYMID_sinh = 135,
  MRBC_SYMID_size = 136,
  MRBC_SYMID_slice_E = 137,
  MRBC_SYMID_sort = 138,
  MRBC_SYMID_sort_E = 139,
  MRBC_SYMID_split = 140,
  MRBC_SYMID_sprintf = 141,
  MRBC_SYMID_sqrt = 142,
  MRBC_SYMID_start_with_Q = 143,
  MRBC_SYMID_strip = 144,
  MRBC_SYMID_strip_E = 145,
  MRBC_SYMID_tan = 146,
  MRBC_SYMID_tanh = 147,
  MRBC_SYMID_times = 148,
  MRBC_SYMID_to_a = 149,
  MRBC_SYMID_to_f = 150,
  MRBC_SYMID_to_h = 151,
  MRBC_SYMID_to_i = 152,
  MRBC_SYMID_to_s = 153,
  MRBC_SYMID_to_sym = 154,
  MRBC_SYMID_tr = 155,
  MRBC_SYMID_tr_E = 156,
  MRBC_SYMID_unshift = 157,
  MRBC_SYMID_values = 158,
  MRBC_SYMID_OR = 159,
  MRBC_SYMID_NEG = 160,
};

#define MRB_SYM(sym)  MRBC_SYMID_##sym
#define MRBC_SYM(sym) MRBC_SYMID_##sym
#endif
