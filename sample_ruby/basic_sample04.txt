mruby 1.2.0 (2015-11-17) 
00002 NODE_SCOPE:
00002   local variables:
00002     a
00002   NODE_BEGIN:
00002     NODE_ASGN:
00002       lhs:
00002         NODE_LVAR a
00002       rhs:
00002         NODE_CALL:
00002           NODE_CONST Array
00002           method='new' (11)
00002           args:
00002             NODE_INT 4 base 10
00002             NODE_INT 100 base 10
00003     NODE_CALL:
00003       NODE_SELF
00003       method='puts' (383)
00003       args:
00003         NODE_DSTR
00003           NODE_STR "" len 0
00003           NODE_BEGIN:
00003             NODE_CALL:
00003               NODE_LVAR a
00003               method='size' (140)
00003           NODE_STR " " len 1
00003           NODE_BEGIN:
00003             NODE_CALL:
00003               NODE_LVAR a
00003               method='[]' (118)
00003               args:
00003                 NODE_INT 1 base 10
00003           NODE_STR "" len 0
00004     NODE_ASGN:
00004       lhs:
00004         NODE_CALL:
00004           NODE_LVAR a
00004           method='[]' (118)
00004           args:
00004             NODE_INT 0 base 10
00004       rhs:
00004         NODE_INT 1 base 10
00005     NODE_ASGN:
00005       lhs:
00005         NODE_CALL:
00005           NODE_LVAR a
00005           method='[]' (118)
00005           args:
00005             NODE_INT 1 base 10
00005       rhs:
00005         NODE_INT 2 base 10
00006     NODE_ASGN:
00006       lhs:
00006         NODE_CALL:
00006           NODE_LVAR a
00006           method='[]' (118)
00006           args:
00006             NODE_INT 2 base 10
00006       rhs:
00006         NODE_INT 3 base 10
00007     NODE_ASGN:
00007       lhs:
00007         NODE_CALL:
00007           NODE_LVAR a
00007           method='[]' (118)
00007           args:
00007             NODE_INT 3 base 10
00007       rhs:
00007         NODE_INT 4 base 10
00008     NODE_ASGN:
00008       lhs:
00008         NODE_CALL:
00008           NODE_LVAR a
00008           method='[]' (118)
00008           args:
00008             NODE_INT 4 base 10
00008       rhs:
00008         NODE_INT 5 base 10
00009     NODE_ASGN:
00009       lhs:
00009         NODE_CALL:
00009           NODE_LVAR a
00009           method='[]' (118)
00009           args:
00009             NODE_INT 5 base 10
00009       rhs:
00009         NODE_INT 6 base 10
00012     NODE_CALL:
00012       NODE_CALL:
00012         NODE_CALL:
00012           NODE_ARRAY:
00012             NODE_INT 1 base 10
00012             NODE_INT 2 base 10
00012             NODE_INT 3 base 10
00012             NODE_INT 4 base 10
00012             NODE_INT 5 base 10
00012             NODE_INT 6 base 10
00012           method='reverse' (137)
00012         method='zip' (483)
00012         args:
00012           NODE_LVAR a
00012       method='each' (239)
00012       args:
00012       block:
00012         NODE_BLOCK:
00012           mandatory args:
00012             NODE_ARG i
00012             NODE_ARG j
00012           body:
00012             NODE_BEGIN:
00012               NODE_CALL:
00012                 NODE_SELF
00012                 method='puts' (383)
00012                 args:
00012                   NODE_DSTR
00012                     NODE_STR "" len 0
00012                     NODE_BEGIN:
00012                       NODE_LVAR i
00012                     NODE_STR " " len 1
00012                     NODE_BEGIN:
00012                       NODE_LVAR j
00012                     NODE_STR "" len 0
irep 0x944fe48 nregs=8 nlocals=2 pools=2 syms=9 reps=1
file: ./basic_sample04.rb
    2 000 OP_GETCONST	R2	:Array
    2 001 OP_LOADI	R3	4	
    2 002 OP_LOADI	R4	100	
    2 003 OP_SEND	R2	:new	2
    2 004 OP_MOVE	R1	R2		; R1:a
    3 005 OP_LOADSELF	R2		
    3 006 OP_STRING	R3	L(0)	; ""
    3 007 OP_MOVE	R4	R1		; R1:a
    3 008 OP_SEND	R4	:size	0
    3 009 OP_STRCAT	R3	R4	
    3 010 OP_STRING	R4	L(1)	; " "
    3 011 OP_STRCAT	R3	R4	
    3 012 OP_MOVE	R4	R1		; R1:a
    3 013 OP_LOADI	R5	1	
    3 014 OP_SEND	R4	:[]	1
    3 015 OP_STRCAT	R3	R4	
    3 016 OP_SEND	R2	:puts	1
    4 017 OP_LOADI	R2	1	
    4 018 OP_MOVE	R3	R1		; R1:a
    4 019 OP_LOADI	R4	0	
    4 020 OP_MOVE	R5	R2	
    4 021 OP_SEND	R3	:[]=	2
    5 022 OP_LOADI	R2	2	
    5 023 OP_MOVE	R3	R1		; R1:a
    5 024 OP_LOADI	R4	1	
    5 025 OP_MOVE	R5	R2	
    5 026 OP_SEND	R3	:[]=	2
    6 027 OP_LOADI	R2	3	
    6 028 OP_MOVE	R3	R1		; R1:a
    6 029 OP_LOADI	R4	2	
    6 030 OP_MOVE	R5	R2	
    6 031 OP_SEND	R3	:[]=	2
    7 032 OP_LOADI	R2	4	
    7 033 OP_MOVE	R3	R1		; R1:a
    7 034 OP_LOADI	R4	3	
    7 035 OP_MOVE	R5	R2	
    7 036 OP_SEND	R3	:[]=	2
    8 037 OP_LOADI	R2	5	
    8 038 OP_MOVE	R3	R1		; R1:a
    8 039 OP_LOADI	R4	4	
    8 040 OP_MOVE	R5	R2	
    8 041 OP_SEND	R3	:[]=	2
    9 042 OP_LOADI	R2	6	
    9 043 OP_MOVE	R3	R1		; R1:a
    9 044 OP_LOADI	R4	5	
    9 045 OP_MOVE	R5	R2	
    9 046 OP_SEND	R3	:[]=	2
   12 047 OP_LOADI	R2	1	
   12 048 OP_LOADI	R3	2	
   12 049 OP_LOADI	R4	3	
   12 050 OP_LOADI	R5	4	
   12 051 OP_LOADI	R6	5	
   12 052 OP_LOADI	R7	6	
   12 053 OP_ARRAY	R2	R2	6
   12 054 OP_SEND	R2	:reverse	0
   12 055 OP_MOVE	R3	R1		; R1:a
   12 056 OP_SEND	R2	:zip	1
   12 057 OP_LAMBDA	R3	I(+1)	2
   12 058 OP_SENDB	R2	:each	0
   12 059 OP_STOP

irep 0x94338b0 nregs=7 nlocals=4 pools=2 syms=1 reps=0
file: ./basic_sample04.rb
   12 000 OP_ENTER	2:0:0:0:0:0:0
   12 001 OP_LOADSELF	R4		
   12 002 OP_STRING	R5	L(0)	; ""
   12 003 OP_MOVE	R6	R1		; R1:i
   12 004 OP_STRCAT	R5	R6	
   12 005 OP_STRING	R6	L(1)	; " "
   12 006 OP_STRCAT	R5	R6	
   12 007 OP_MOVE	R6	R2		; R2:j
   12 008 OP_STRCAT	R5	R6	
   12 009 OP_SEND	R4	:puts	1
   12 010 OP_RETURN	R4	return	

4 100
6 1
5 2
4 3
3 4
2 5
1 6
